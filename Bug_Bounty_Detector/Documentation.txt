Bug Bounty Detection Tool

Overview
The Bug Bounty Detection Tool is a Python-based security scanner that detects vulnerabilities in code files. It features a Tkinter GUI frontend and a 
Flask-based backend, providing an easy-to-use interface for developers to analyze their code for security issues.

Features
Supports Multiple Languages: Python, Java, C#, JavaScript
Dark Theme UI with improved styling
Real-time Bug Detection
Success & Error Messages in Different Colors
One-click File Selection & Scanning
Standalone Executable (.exe) for Easy Distribution

Technologies Used
Frontend: Tkinter (Python GUI)
Backend: Flask (REST API)
File Handling: Python File Dialog
Packaging: PyInstaller

Installation
Prerequisites
Ensure you have the following installed:
Python 3.x
pip (Python package manager)
Tkinter (Frontend GUI)
PyInstaller (For creating executable files)
Flask (For running the backend)

Install dependencies using:

pip install flask pyinstaller requests

Running the Project
1. Running the Backend
Execute the following command:

py Bug_Detection.py

This starts the Flask API that scans files for vulnerabilities.

2. Running the Frontend
Execute:

py Bug_Bounty_Detection.py

This opens the Tkinter GUI for file selection and scanning.

Creating an Executable (.exe)
To generate a standalone .exe file:

pyinstaller --onefile --windowed --icon=bug-detector.png Bug_Bounty_Detection.py

This creates an .exe file in the dist/ folder.

How It Works
1. User selects a programming language from a dropdown.
2. User uploads a source code file using the file selection button.
3. File is sent to the Flask backend for analysis.
4. Backend scans for security vulnerabilities and returns results.
5. GUI displays results in different colors:



Future Enhancements
Integrate AI-based bug detection
Support more programming languages
Add a detailed report generation feature

License
This project is open-source and available under the MIT License.

